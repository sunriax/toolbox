//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetworkLib.Language {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceText() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NetworkLib.ResourceText", typeof(ResourceText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 0744  ähnelt.
        /// </summary>
        internal static string _0744 {
            get {
                return ResourceManager.GetString("_0744", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /toolbox ähnelt.
        /// </summary>
        internal static string BashApp {
            get {
                return ResourceManager.GetString("BashApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die test ähnelt.
        /// </summary>
        internal static string BashAppTest {
            get {
                return ResourceManager.GetString("BashAppTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die version ähnelt.
        /// </summary>
        internal static string BashAppVersion {
            get {
                return ResourceManager.GetString("BashAppVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die chmod  ähnelt.
        /// </summary>
        internal static string BashChmod {
            get {
                return ResourceManager.GetString("BashChmod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die stat -c &apos;%a&apos;  ähnelt.
        /// </summary>
        internal static string BashgetFilePremission {
            get {
                return ResourceManager.GetString("BashgetFilePremission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die whoami ähnelt.
        /// </summary>
        internal static string BashgetUser {
            get {
                return ResourceManager.GetString("BashgetUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /home/ ähnelt.
        /// </summary>
        internal static string BashHome {
            get {
                return ResourceManager.GetString("BashHome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string EMPTY {
            get {
                return ResourceManager.GetString("EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Benutzerabrage fehlgeschalgen ähnelt.
        /// </summary>
        internal static string ExceptionBashUserQuery {
            get {
                return ResourceManager.GetString("ExceptionBashUserQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable Zertifikat leer! ähnelt.
        /// </summary>
        internal static string ExceptionCertificate {
            get {
                return ResourceManager.GetString("ExceptionCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zertifikat konnte nicht gefunden werden! ähnelt.
        /// </summary>
        internal static string ExceptionCertificateExist {
            get {
                return ResourceManager.GetString("ExceptionCertificateExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NetworkLib ähnelt.
        /// </summary>
        internal static string ExceptionClass {
            get {
                return ResourceManager.GetString("ExceptionClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verbindung nicht initiiert! ähnelt.
        /// </summary>
        internal static string ExceptionConnection {
            get {
                return ResourceManager.GetString("ExceptionConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verbindung fehlgeschlagen! ähnelt.
        /// </summary>
        internal static string ExceptionConnectionFailed {
            get {
                return ResourceManager.GetString("ExceptionConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable IP Adresse leer! ähnelt.
        /// </summary>
        internal static string ExceptionIP {
            get {
                return ResourceManager.GetString("ExceptionIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable Port leer ähnelt.
        /// </summary>
        internal static string ExceptionPort {
            get {
                return ResourceManager.GetString("ExceptionPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SFTP Client authentifizierung fehlgeschlagen ähnelt.
        /// </summary>
        internal static string ExceptionSFTPclient {
            get {
                return ResourceManager.GetString("ExceptionSFTPclient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SFTP Verbindung zum Server fehlgeschlagen ähnelt.
        /// </summary>
        internal static string ExceptionSFTPconnect {
            get {
                return ResourceManager.GetString("ExceptionSFTPconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH() ähnelt.
        /// </summary>
        internal static string ExceptionSSH {
            get {
                return ResourceManager.GetString("ExceptionSSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH Client authenzifizierung fehlgeschlagen ähnelt.
        /// </summary>
        internal static string ExceptionSSHclient {
            get {
                return ResourceManager.GetString("ExceptionSSHclient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSH Verbindung zum Server fehlgeschlagen ähnelt.
        /// </summary>
        internal static string ExceptionSSHconnect {
            get {
                return ResourceManager.GetString("ExceptionSSHconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable Benutzername leer! ähnelt.
        /// </summary>
        internal static string ExceptionUser {
            get {
                return ResourceManager.GetString("ExceptionUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die . ähnelt.
        /// </summary>
        internal static string IPdelimiter {
            get {
                return ResourceManager.GetString("IPdelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Meldung ähnelt.
        /// </summary>
        internal static string Message {
            get {
                return ResourceManager.GetString("Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die \n ähnelt.
        /// </summary>
        internal static string NewLineLinux {
            get {
                return ResourceManager.GetString("NewLineLinux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die \r ähnelt.
        /// </summary>
        internal static string NewLineWindows {
            get {
                return ResourceManager.GetString("NewLineWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die n.A. ähnelt.
        /// </summary>
        internal static string NotAvileable {
            get {
                return ResourceManager.GetString("NotAvileable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die safhjweuds92723bsa2 ähnelt.
        /// </summary>
        internal static string Passphrase {
            get {
                return ResourceManager.GetString("Passphrase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AAAA ähnelt.
        /// </summary>
        internal static string pingDATA {
            get {
                return ResourceManager.GetString("pingDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /home/ ähnelt.
        /// </summary>
        internal static string ServerBashHome {
            get {
                return ResourceManager.GetString("ServerBashHome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die toolbox ähnelt.
        /// </summary>
        internal static string ServerBashToolname {
            get {
                return ResourceManager.GetString("ServerBashToolname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die / ähnelt.
        /// </summary>
        internal static string Slash {
            get {
                return ResourceManager.GetString("Slash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /_cert/arietta.key ähnelt.
        /// </summary>
        internal static string sshCERTIFICATE {
            get {
                return ResourceManager.GetString("sshCERTIFICATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die __nocon__ ähnelt.
        /// </summary>
        internal static string sshFaultNoConnection {
            get {
                return ResourceManager.GetString("sshFaultNoConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 192.168.0.1 ähnelt.
        /// </summary>
        internal static string sshIP {
            get {
                return ResourceManager.GetString("sshIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die elmProject ähnelt.
        /// </summary>
        internal static string sshPASSPHRASE {
            get {
                return ResourceManager.GetString("sshPASSPHRASE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die acmesystems ähnelt.
        /// </summary>
        internal static string sshPASSWORD {
            get {
                return ResourceManager.GetString("sshPASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 22 ähnelt.
        /// </summary>
        internal static string sshPORT {
            get {
                return ResourceManager.GetString("sshPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die root ähnelt.
        /// </summary>
        internal static string sshUSERNAME {
            get {
                return ResourceManager.GetString("sshUSERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die true ähnelt.
        /// </summary>
        internal static string TRUE {
            get {
                return ResourceManager.GetString("TRUE", resourceCulture);
            }
        }
    }
}
